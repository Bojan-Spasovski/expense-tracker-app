{"ast":null,"code":"var _jsxFileName = \"G:\\\\Front-End Deving\\\\Udemy React\\\\Expenditure Tracker App\\\\expenditure-tracker-app\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\"; // Filling the ChartBar using the value relation to the maxValue\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chartbar = props => {\n  let barFillHeight = `0%`;\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + `%`;\n  } // Setting the style prop of an element dynamically, by passing an object inside the\n  // style prop in the element/div.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chartbar;\nexport default Chartbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chartbar\");","map":{"version":3,"sources":["G:/Front-End Deving/Udemy React/Expenditure Tracker App/expenditure-tracker-app/src/components/Chart/ChartBar.js"],"names":["React","Chartbar","props","barFillHeight","maxValue","Math","round","value","height","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAIC,aAAa,GAAI,IAArB;;AAEA,MAAID,KAAK,CAACE,QAAN,GAAiB,CAArB,EAAwB;AACtBD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACE,QAArB,GAAiC,GAA5C,IAAoD,GAApE;AACD,GALyB,CAO1B;AACA;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AAAEI,UAAAA,MAAM,EAAEL;AAAV;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCD,KAAK,CAACO;AAAzC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;KAAMR,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\n// Filling the ChartBar using the value relation to the maxValue\r\nconst Chartbar = (props) => {\r\n  let barFillHeight = `0%`;\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + `%`;\r\n  }\r\n\r\n  // Setting the style prop of an element dynamically, by passing an object inside the\r\n  // style prop in the element/div.\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chartbar;\r\n"]},"metadata":{},"sourceType":"module"}